declare void @exit(i32)
declare i32 @printf(i8*, ...)

@.int_specifier = internal constant [4 x i8] c"%d\0A\00"
define void @printi(i32) {call i32 (i8*, ...) @printf(i8* getelementptr ([4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0), i32 %0) ret void}

@.str_specifier = internal constant [3 x i8] c"%s\00"
define void @print(i8*) {call i32 (i8*, ...) @printf(i8* getelementptr ([3 x i8], [3 x i8]* @.str_specifier, i32 0, i32 0), i8* %0) ret void}

define void  @main(){
entry:
%agg = insertvalue {[3 x i32]} undef, [3 x i32] zeroinitializer, 0
%arr = extractvalue {[3 x i32]} %agg, 0
%arrMem = alloca [3 x i32]
store [3 x i32] %arr, [3 x i32]* %arrMem
%arrPtr = getelementptr inbounds [3 x i32], [3 x i32]* %arrMem, i32 0, i32 5
%extractedVal = load i32, i32* %arrPtr

call void @printi(i32 %extractedVal )
br label %kivLabel
kivLabel:
ret void
}


